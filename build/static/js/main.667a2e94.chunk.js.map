{"version":3,"sources":["components/admin/Logout.js","components/static/Nav.js","components/static/Header.js","components/static/Footer.js","components/body/Landing.js","components/static/NoMatch.js","components/utilities/TournamentContext.js","components/body/tournaments/Tournaments.js","components/static/Back.js","components/utilities/FetchClient.js","components/static/ReturnToTournaments.js","components/static/NoTournament.js","components/body/tournaments/Tournament.js","components/utilities/DateConvert.js","components/body/tournaments/AddNewForm/AddNewFormHandler.js","components/body/tournaments/AddNewForm/AddNewValidateValues.js","components/body/tournaments/AddNewForm/AddNew.js","components/body/tournaments/Standings/StandingsTable.js","components/body/tournaments/Standings/Standings.js","components/body/tournaments/MatchSchedule/MatchTable.js","components/body/tournaments/MatchSchedule/MatchSchedule.js","components/body/tournaments/Modify/MenuButton.js","components/body/tournaments/Modify/Menu.js","components/body/tournaments/Modify/Info/ModifyInfoFormHandler.js","components/body/tournaments/Modify/Info/ModifyInfoValidateValues.js","components/body/tournaments/Modify/Info/InfoForm.js","components/body/tournaments/Modify/Info/ModifyInfo.js","components/body/tournaments/Modify/Teams/TeamValidateValues.js","components/body/tournaments/Modify/Teams/TeamFormHandler.js","components/body/tournaments/Modify/Teams/AddTeam.js","components/body/tournaments/Modify/Teams/Team.js","components/body/tournaments/Modify/Teams/ModifyTeams.js","components/body/tournaments/Modify/Referees/RefereeValidateValues.js","components/body/tournaments/Modify/Referees/RefereeFormHandler.js","components/body/tournaments/Modify/Referees/AddReferee.js","components/body/tournaments/Modify/Referees/Referee.js","components/body/tournaments/Modify/Referees/ModifyReferees.js","components/body/tournaments/Modify/Matches/MatchesTable.js","components/body/tournaments/Modify/Matches/MatchValidateValues.js","components/body/tournaments/Modify/Matches/MatchFormHandler.js","components/body/tournaments/Modify/Matches/Select.js","components/body/tournaments/Modify/Matches/AddMatch.js","components/body/tournaments/Modify/Matches/ModifyMatches.js","components/utilities/AuthDataProvider.js","components/admin/Login/FormHandler.js","components/admin/Login/ValidateValues.js","components/admin/Login/LoginForm.js","components/admin/ChangePassword/ChangePassFormHandler.js","components/admin/ChangePassword/ChangePassValidateValues.js","components/admin/ChangePassword/ChangePassForm.js","components/utilities/Provider.js","App.js","serviceWorker.js","index.js"],"names":["Logout","className","onClick","sessionStorage","clear","window","location","reload","Nav","authData","getItem","type","e","target","document","querySelector","checked","to","activeClassName","Header","src","alt","Footer","Landing","Component","NoMatch","class","TournamentContext","createContext","Tournaments","props","useState","tournaments","setTournaments","context","useContext","getTournaments","adminId","useEffect","length","map","tournament","key","_id","setTournamentId","history","push","name","Back","link","getHeader","webToken","headers","callback","axios","get","then","response","data","catch","err","getTournamentById","id","deleteMatchById","matchId","tournamentId","delete","ReturnToTournaments","NoTournament","Tournament","setTournament","result","dateString","minutes","month","date","Date","day","console","log","getDay","getDate","getMonth","getFullYear","getHours","getMinutes","DateConvert","alert","message","FormHandler","initialState","validate","emptyValues","values","setValues","errors","setErrors","isSubmitting","setSubmitting","Object","keys","post","postNewTournament","error","sendTournament","defaultMatch","maxRounds","Number","maxPoints","timeOuts","bestOfMaxRounds","winByTwo","handleChange","value","handleDateChange","handleBlur","validationErrors","submit","preventDefault","ValidateValues","INITIAL_STATE","AddNew","onSubmit","onChange","onBlur","selected","onSelect","showTimeSelect","dateFormat","disabled","StandingsTable","teams","sortedTeams","sort","a","b","aWins","gamesWon","bWins","aRounds","roundsWon","bRounds","aPoints","pointsWon","pointsLost","bPoints","team","index","gamesPlayed","gamesDraw","gamesLost","roundsLost","won","lost","points","getPoints","Standings","goBack","MatchTable","matches","match","homeTeam","visitorTeam","homeRoundsWon","visitorRoundsWon","refereeName","startingTime","MatchSchedule","MenuButton","attribute","url","Menu","navigate","patch","updateTournament","InfoForm","ModifyInfoFormHandler","ModifyInfoValidateValues","dbError","style","display","placeholder","ModifyInfo","toggleRefresh","addTeam","postTeam","AddTeam","TeamFormHandler","INITIAL_VALUES","TeamValidateValues","Team","key1","deleteTeam","ModifyTeams","password","referee","addReferee","AddReferee","RefereeFormHandler","RefereeValidateValues","Referee","deleteReferee","ModifyReferees","referees","MatchesTable","sorted","localeCompare","MatchValidateValues","home","visitor","MatchFormHandler","sendMatch","handleTimeChange","time","Select","array","element","AddMatch","disableClock","ModifyMatches","AuthDataContext","useAuthDataContext","AuthDataProvider","setAuthData","currentAuthData","authDataValue","onLogin","newAuthData","setItem","onLogout","Provider","attemptLogin","admin","login","username","status","token","LoginForm","ChangePassFormHandler","newPassword","sendData","changePassword","changePass","ChangePassValidateValues","newPasswordAgain","ChangePassForm","children","PrivateRoute","component","options","finalComponent","Login","App","exact","path","excat","ChangePass","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.667a2e94.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Logout() {\n  return (\n    <button className=\"menu-item\" onClick={() => {\n      sessionStorage.clear();\n      window.location.reload();\n    }}>\n      Kirjaudu ulos\n    </button>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logout from \"../admin/Logout\";\n\nexport default function Nav() {\n  const authData = sessionStorage.getItem(\"currentAuthData\");\n  const onClick = (e) => {\n    if (e.target.className !== \"unclickable\") {\n      let checked = document.querySelector(\".toggler\").checked;\n      if (checked === true) {\n        document.querySelector(\".toggler\").checked = false;\n      }\n    }\n  };\n  return (\n    <div className=\"menu-wrap\">\n      <input type=\"checkbox\" className=\"toggler\" />\n      <div className=\"hamburger\">\n        <div></div>\n      </div>\n      <div className=\"menu\">\n        <div>\n          <div>\n            <ul onClick={onClick}>\n              <li>\n                <NavLink\n                  to=\"/koti\"\n                  className=\"menu-item\"\n                  activeClassName=\"active\"\n                >\n                  Etusivu\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"/turnaukset\"\n                  className=\"menu-item\"\n                  activeClassName=\"active\"\n                >\n                  Turnaukset/Sarjat\n                </NavLink>\n              </li>\n              {authData ? (\n                <li>\n                  <NavLink\n                    to=\"/admin/vaihda-salasana\"\n                    className=\"menu-item\"\n                    activeClassName=\"active\"\n                  >\n                    Vaihda salasana\n                  </NavLink>\n                </li>\n              ) : null}\n              <li>\n                {authData ? (\n                  <Logout />\n                ) : (\n                  <NavLink\n                    to=\"/kirjaudu\"\n                    className=\"menu-item\"\n                    activeClassName=\"active\"\n                  >\n                    Kirjaudu\n                  </NavLink>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Nav from './Nav.js';\n\nconst Header = () => {\n  return (\n    <header>\n      <img src=\"/assets/img/logo.png\" alt=\"RKC-logo\" className=\"logo\"/>\n      <h1>RKC-Volley</h1>\n      <Nav/>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p><i className=\"far fa-copyright\"></i> Niko Hienonen</p>\n    </footer>\n  );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport Footer from '../static/Footer';\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div>\n          <div className=\"landing\">\n          <img src=\"/assets/img/logo.png\" alt=\"RKC-logo\"/>\n          <h1>Lentopallopalvelut</h1>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div class=\"404\">404, page not found.</div>\n    );\n}\n \nexport default NoMatch;","import { createContext } from \"react\";\n\nexport const TournamentContext = createContext();","import React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TournamentContext } from \"../../utilities/TournamentContext\";\n\nexport default function Tournaments(props) {\n  const [tournaments, setTournaments] = useState([]);\n  const context = useContext(TournamentContext);\n  const { getTournaments } = context;\n\n  const adminId = sessionStorage.getItem(\"adminId\");\n\n  useEffect(() => {\n    if (tournaments.length === 0) {\n      getTournaments((tournaments) => {\n        if (tournaments) {\n          setTournaments(tournaments);\n        }\n      });\n    }\n  });\n\n  return (\n    <div>\n      <h1>Turnaukset/Sarjat</h1>\n      <div>\n        {tournaments.length === 0 ? (\n          <div className=\"m3-container\">\n            <p>Ei turnauksia vielä!</p>\n          </div>\n        ) : (\n          <div className=\"tournaments\">\n            <ul>\n              {tournaments.map((tournament) => (\n                <li key={tournament._id}>\n                  <button\n                    className=\"card\"\n                    onClick={() => {\n                      context.setTournamentId(tournament._id);\n                      props.history.push(\"/turnaukset/\" + tournament._id);\n                    }}\n                  >\n                    {tournament.name}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {adminId ? <Link to={\"/turnaukset/uusi\"}>Lisää uusi</Link> : null}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Back({link}) {\n  return (\n    <Link to={link} className=\"back-button\">\n    Palaa\n    </Link>\n  );\n}\n","import axios from 'axios';\n\nfunction getHeader() {\n  const webToken = sessionStorage.getItem('currentAuthData');\n  return {\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${webToken}`\n    }\n  }\n}\n\nexport function login(admin, callback) {\n  axios.post(`/api/admin/login`, admin)\n    .then(result => callback(result))\n    .catch(err => callback(err));\n}\nexport function changePassword(adminId, data, callback) {\n  const { password, newPassword } = data;\n  const sendData = {\n    password,\n    newPassword\n  };\n  axios.patch(`/api/admin/${adminId}/`, sendData, getHeader())\n    .then(response => callback(response))\n    .catch(err => callback(err));\n}\nexport function getTournaments (callback) {\n  axios.get('/api/tournaments', getHeader())\n    .then(response => {\n      callback(response.data.tournaments);\n    })\n    .catch(err => callback(err));\n}\n\nexport function getTournamentById  (id, callback) {\n  axios.get(`/api/tournaments/${id}`, getHeader())\n    .then(response => {\n      callback(response.data.tournament);\n    })\n    .catch(err => callback(err));\n}\n\nexport function postNewTournament  (data, callback) {\n  axios.post(`/api/tournaments/`, data, getHeader())\n    .then(response => {\n      callback(response.data);\n    })\n    .catch(err => callback(err));\n}\n\nexport function deleteTournament(id, callback) {\n  axios.delete(`/api/tournaments/${id}`, getHeader())\n    .then(response => {\n      callback(response);\n    })\n    .catch(err => callback(err));\n}\n\nexport function updateTournament(id, data, callback) {\n  axios.patch(`/api/tournaments/${id}`, data, getHeader())\n    .then(response => {\n      callback(response);\n    })\n    .catch(err => callback(err));\n}\n\nexport function addReferee(referee, tournamentId, callback) {\n  axios.patch(`/api/tournaments/${tournamentId}/referees/add`, referee, getHeader())\n    .then(response => {\n      callback(response);\n    })\n    .catch(err => callback(err));\n}\nexport function deleteReferee(referee, tournamentId, callback) {\n  axios.delete(`/api/tournaments/${tournamentId}/referees/${referee.name}`, getHeader())\n    .then(response => callback(response))\n    .catch(err => callback(err));\n}\nexport function addTeam(team, id, callback) {\n  axios.post(`/api/tournaments/${id}/teams/addTeam`, team, getHeader())\n    .then(response => callback(response))\n    .catch(err => callback(err));\n}\nexport function deleteTeam(team, id, callback) {\n  axios.delete(`/api/tournaments/${id}/teams/${team}`, getHeader())\n    .then(response => callback(response))\n    .catch(err => callback(err));\n} \nexport function addMatch(match, tournamentId, callback) {\n  axios.post(`/api/tournaments/${tournamentId}/matches/`, match, getHeader())\n    .then(result => callback(result))\n    .catch(err => callback(err));\n}\nexport function deleteMatchById(matchId, tournamentId, callback) {\n  axios.delete(`/api/tournaments/${tournamentId}/matches/${matchId}`, getHeader())\n    .then(response => callback(response))\n    .catch(err => callback(err));\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ReturnToTournaments() {\n  return <Link to={`/turnaukset`}>Alkuun</Link>;\n}\n","import React from 'react';\nimport ReturnToTournaments from \"./ReturnToTournaments\";\n\nexport default function NoTournament() {\n  return (\n    <div className=\"m3-container\">\n      <h2>Turnausta ei löytynyt</h2>\n      <ReturnToTournaments/>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { TournamentContext } from \"../../utilities/TournamentContext\";\nimport DateConvert from \"../../utilities/DateConvert\";\nimport Back from \"../../static/Back\";\nimport { deleteTournament } from \"../../utilities/FetchClient\";\nimport NoTournamentFound from \"../../static/NoTournament\";\n\nexport default function Tournament(props) {\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n  const adminId = sessionStorage.getItem(\"adminId\");\n  useEffect(() => {\n    if (!tournament) {\n      const tournamentId = sessionStorage.getItem(\"tournamentId\");\n      if (tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        });\n      }\n    }\n  });\n\n  return (\n    <div className=\"card tournament\">\n      {!tournament ? (\n        <NoTournamentFound />\n      ) : (\n        <Fragment>\n          <h1>{tournament.name}</h1>\n          <div>\n            <p>{tournament.location}</p>\n            <p>{DateConvert(tournament.date)}</p>\n            <div className=\"actions\">\n              <Link to={`/turnaukset/${tournament.name}/sarjataulukko`}>\n                Sarjataulukko\n              </Link>\n              <Link to={`/turnaukset/${tournament.name}/otteluohjelma`}>\n                Otteluohjelma\n              </Link>\n              {!adminId ? null : (\n                <Fragment>\n                  <Link to={`/turnaukset/${tournament.name}/muokkaa`}>\n                    Muokkaa\n                  </Link>\n                  <button\n                    className=\"delete\"\n                    onClick={() =>\n                      deleteTournament(tournament._id, (result) => {\n                        alert(\n                          result.message\n                            ? \"Poisto epäonnistui\"\n                            : \"Poisto Onnistui\"\n                        );\n                        props.history.push(\"/turnaukset\");\n                      })\n                    }\n                  >\n                    Poista\n                  </button>\n                </Fragment>\n              )}\n            </div>\n            <Back link=\"/turnaukset\" />\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","export default function DateConvert(dateString) {\n  const getDay = (day) => {\n    console.log(day);\n    switch (day) {\n      case 1:\n        return \"Ma, \";\n      case 2:\n        return \"Ti, \";\n      case 3:\n        return \"Ke, \";\n      case 4:\n        return \"To, \";\n      case 5:\n        return \"Pe, \";\n      case 6:\n        return \"La, \";\n      case 7:\n        return \"Su, \";\n      default:\n        return \"\";\n    }\n  };\n  const january = (month) => (month === 0 ? 1 : month);\n  const minutes = (minutes) => (minutes === 0 ? \"00\" : minutes);\n  const date = new Date(dateString);\n  return `${getDay(date.getDay())}${date.getDate()}/${january(\n    date.getMonth()\n  )}/${date.getFullYear()} ${date.getHours()}:${minutes(date.getMinutes())}`;\n}\n","import { useState, useEffect } from 'react'\n\nimport { postNewTournament } from '../../../utilities/FetchClient';\n\nexport default function FormHandler(initialState, validate, props) {\n  const emptyValues = initialState;\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        const data = {\n          name: values.name, \n          date: values.date, \n          location: values.location,\n          defaultMatch: {\n            maxRounds: Number(values.maxRounds),\n            maxPoints: Number(values.maxPoints),\n            timeOuts: Number(values.timeOuts),\n            bestOfMaxRounds: values.bestOfMaxRounds,\n            winByTwo: values.winByTwo\n          }\n        };\n        sendTournament(data);\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  });\n  \n  function sendTournament(data) {\n    postNewTournament(data, result => {\n      alert(result.message ? result.message : result.error);\n      setValues(emptyValues);\n      props.history.push('/turnaukset');\n    });\n  }\n\n  function handleDateChange(date) {\n    setValues({\n      ...values,\n      date: date\n    });\n  }\n\n  function handleChange(e) {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setValues({\n      ...values,\n      [e.target.name]: value\n    });\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return { handleChange, handleDateChange, handleBlur, submit, \n    errors, values, isSubmitting };\n}\n","export default function ValidateValues(values) {\n  let errors= {};\n  // Name Errors\n  if(!values.name) {\n    errors.name = 'Nimi on pakollinen';\n  } else if (values.name.length < 3) {\n    errors.name = 'Nimen pituus on vähintään kolme merkkiä';\n  }\n  // Location Errors\n  if(!values.location) {\n    errors.location = 'Sijainti on pakollinen';\n  } else if (values.location.length < 3) {\n    errors.location = 'Sijainnin pituus on vähintään kolme merkkiä';\n  }\n  if(!values.maxRounds) {\n    errors.maxRounds = 'Eräkatto on pakollinen';\n  } else if (values.maxRounds === 0 || values.maxRounds < 0) {\n    errors.maxRounds = 'Eräkaton on oltava enemmän kuin nolla';\n  }\n  if(!values.maxPoints) {\n    errors.maxPoints = 'Pistekatto on pakollinen';\n  } else if (values.maxPoints === 0 || values.maxPoints < 0) {\n    errors.maxPoints = 'Pistekaton on oltava enemmän kuin nolla';\n  }\n  if(!values.timeOuts) {\n    errors.timeOuts = 'Timeout on pakollinen';\n  }\n  return errors;\n}","import React from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { default as FormHandler } from './AddNewFormHandler';\nimport { default as ValidateValues } from './AddNewValidateValues';\nimport Back from '../../../static/Back';\n\nconst INITIAL_STATE = {\n  name: '',\n  location: '',\n  date: new Date(),\n  maxRounds: 0,\n  maxPoints: 0,\n  timeOuts: 0,\n  bestOfMaxRounds: false,\n  winByTwo: false,\n}\n\nexport default function AddNew(props) {\n  const { \n    handleChange, \n    handleDateChange, \n    handleBlur, \n    submit, \n    errors, \n    values, \n    isSubmitting, \n  } = FormHandler(INITIAL_STATE, ValidateValues, props);\n\n  function handleSelect(date) {\n    handleDateChange(date);\n  }\n  return(\n    <div>\n      <h1>Lisää uusi turnaus</h1>\n      <form onSubmit={submit}>\n      <label>\n        Nimi\n        <input value={values.name} onChange={handleChange} \n        onBlur={handleBlur} className={errors.name && 'error-input'} type=\"text\" \n        name=\"name\"/>\n      </label>\n      {errors.name && <p className=\"error-text\">{errors.name}</p>}\n      <label>\n        Sijainti\n        <input value={values.location} onChange={handleChange} \n        onBlur={handleBlur} className={errors.location && 'error-input'} type=\"text\" \n        name=\"location\"/>\n      </label>\n      {errors.location && <p className=\"error-text\">{errors.location}</p>}\n      <label>\n        Ajankohta\n        <DatePicker\n        selected={values.date}\n        onSelect={handleSelect}\n        showTimeSelect\n        dateFormat=\"Pp\"\n        />\n      </label>\n      <label >\n        Eräkatto\n        <input value={values.maxRounds} onChange={handleChange} \n        onBlur={handleBlur} className={errors.maxRounds && 'error-input'} type=\"number\" \n        name=\"maxRounds\"/>\n      </label>\n      {errors.maxRounds && <p className=\"error-text\">{errors.maxRounds}</p>}\n      <label>\n        Pistekatto\n        <input value={values.maxPoints} onChange={handleChange} \n        onBlur={handleBlur} className={errors.maxPoints && 'error-input'} type=\"number\" \n        name=\"maxPoints\"/>\n      </label>\n      {errors.maxPoints && <p className=\"error-text\">{errors.maxPoints}</p>}\n      <label>\n        Aikalisät per erä\n        <input value={values.timeOuts} onChange={handleChange} \n        onBlur={handleBlur} className={errors.timeOuts && 'error-input'} type=\"number\" \n        name=\"timeOuts\"/>\n      </label>\n      {errors.timeOuts && <p className=\"error-text\">{errors.timeOuts}</p>}\n      <label>\n        Paras eräkatosta\n        <input value={values.bestOfMaxRounds} onChange={handleChange} \n        onBlur={handleBlur} className=\"checkbox\" type=\"checkbox\" \n        name=\"bestOfMaxRounds\"/>\n      </label>\n      <label>\n        Kahden erolla\n        <input value={values.winByTwo} onChange={handleChange} \n        onBlur={handleBlur} className=\"checkbox\" type=\"checkbox\" \n        name=\"winByTwo\"/>\n      </label>\n      <button disabled={isSubmitting} type=\"submit\">\n        Luo\n      </button>\n    </form>\n    <Back className=\"m3-container\" link={'/turnaukset'}/>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function StandingsTable({teams}) {\n  const compare = (a, b) => {\n    const aWins = a.gamesWon;\n    const bWins = b.gamesWon;\n    if(aWins !== bWins) return bWins - aWins;\n    const aRounds = a.roundsWon;\n    const bRounds = b.roundsWon; \n    if(aRounds !== bRounds) return  bRounds - aRounds;\n    const aPoints = a.pointsWon - a.pointsLost;\n    const bPoints = b.pointsWon - b.pointsLost;\n    console.log(aPoints, bPoints)\n    if(aPoints !== bPoints) return bPoints - aPoints;\n  };\n\n  const getPoints = (won, lost) => {\n    let points = won - lost;\n    return points < 0 ? points : `+${points}`;\n  }\n\n  const sortedTeams = [...teams].sort(compare);\n\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>\n              Joukkue\n            </th>\n            <th>\n              Ottelut\n            </th>\n            <th>\n              Voitot\n            </th>\n            <th>\n              Tasapelit\n            </th>\n            <th>\n              Tappiot\n            </th>\n            <th>\n              Eräsuhde\n            </th>\n            <th>\n              Pistesuhde\n            </th>\n            <th>Sarjapisteet</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTeams.map((team, index) => {\n            return <tr key={team._id}>\n              <th>{`${index+1}`}</th>\n              <td>{team.name}</td>\n              <td>{team.gamesPlayed}</td>\n              <td>{team.gamesWon}</td>\n              <td>{team.gamesDraw}</td>\n              <td>{team.gamesLost}</td>\n              <td>{team.roundsWon} / {team.roundsLost}</td>\n              <td>{getPoints(team.pointsWon, team.pointsLost)}</td>\n              <th>{team.roundsWon}</th>\n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useContext, Fragment, useEffect, useState } from 'react';\n\nimport { TournamentContext } from '../../../utilities/TournamentContext';\nimport NoTournament from '../../../static/NoTournament';\nimport Back from '../../../static/Back'; \nimport StandingsTable from './StandingsTable';\n\nexport default function Standings(props) {\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n  return (\n    <div className=\"mb3-container\">\n      <h1>Sarjataulukko</h1>\n      {!tournament\n      ? <NoTournament/>\n      : !tournament.teams || tournament.teams.length === 0\n      ? <Fragment>\n          <div className=\"m3-container\">\n            <p>Turnauksessa ei ole vielä joukkueita.</p>\n          </div>\n          <button onClick={() => props.history.goBack()}>\n            Palaa\n          </button>\n        </Fragment>\n      : <Fragment>\n      <StandingsTable teams={tournament.teams}/>\n      <Back link={`/turnaukset/${tournament.name}/`}/>\n    </Fragment>\n    }\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function MatchTable({matches}) {\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>\n              Aika\n            </th>\n            <th>\n              Koti\n            </th>\n            <th>\n            </th>\n            <th>\n              Vieras\n            </th>\n            <th>\n              Tulos\n            </th>\n            <th>\n              Kenttä\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {matches.map((match) => {\n            const {homeTeam, visitorTeam, homeRoundsWon, \n              visitorRoundsWon, refereeName, startingTime} = match;\n            return <tr key={match._id}>\n              <td>{startingTime}</td>\n              <td>{homeTeam}</td>\n              <td>-</td>\n              <td>{visitorTeam}</td>\n              <th>{`${homeRoundsWon} - ${visitorRoundsWon}`}</th>\n              <td>{refereeName}</td>\n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\n\nimport { TournamentContext } from '../../../utilities/TournamentContext';\nimport NoTournament from '../../../static/NoTournament';\nimport Back from '../../../static/Back';\n\nimport MatchTable from './MatchTable';\n\nexport default function MatchSchedule() {\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n  return (\n    <div>\n      {!tournament\n      ? <NoTournament/>\n      :<Fragment>\n        <h1>Otteluohjelma</h1>\n          {\n            !tournament.matches || tournament.matches.length === 0\n            ? <p>Turnauksessa ei ole vielä otteluita.</p>\n            : <MatchTable matches={tournament.matches}/>\n          }\n        <div className=\"m3-container\">\n          <Back link={`/turnaukset/${tournament.name}/`}/>\n        </div>\n      </Fragment>\n    }\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function MenuButton({ name, attribute }) {\n  const url = `/turnaukset/${name}/muokkaa/${attribute}`;\n  return (\n    <button className=\"menu-button\">\n      <Link to={url}>{attribute}</Link>\n    </button>\n  );\n}\n","import React, { useContext, useState, useEffect }from 'react';\n\nimport { TournamentContext } from '../../../utilities/TournamentContext';\nimport NoTournament from '../../../static/NoTournament';\nimport Back from '../../../static/Back';\nimport MenuButton from './MenuButton';\n\nexport default function Menu(props) {\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n  return (\n    <div>\n      {\n        !tournament\n        ? <NoTournament/>\n        : <div className=\"modify-menu\">\n            <h1>Muokkaa turnausta: {tournament.name}</h1>\n            <div className=\"menu-buttons\">\n              <MenuButton name={tournament.name} attribute=\"Yleinen\"/>\n              <MenuButton name={tournament.name} attribute=\"Joukkueet\"/>\n              <MenuButton name={tournament.name} attribute=\"Tuomarit\"/>\n              <MenuButton name={tournament.name} attribute=\"Ottelut\"/>\n            </div>\n            <Back link={`/turnaukset/${tournament.name}`}/>\n          </div>\n      }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react'\n\nimport { updateTournament } from '../../../../utilities/FetchClient';\n\nexport default function FormHandler(initialState, validate, id, navigate) {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        const data = {\n          name: values.name, \n          date: values.date, \n          location: values.location,\n          defaultMatch: {\n            maxRounds: Number(values.maxRounds),\n            maxPoints: Number(values.maxPoints),\n            timeOuts: Number(values.timeOuts),\n            bestOfMaxRounds: values.bestOfMaxRounds,\n            winByTwo: values.winByTwo\n          }\n        };\n        sendTournament(data);\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  });\n  \n  function sendTournament(data) {\n    updateTournament(id, data, result => {\n      alert(result.data ? result.data.message : 'Päivitys  epäonnistui');\n      navigate();\n    });\n  }\n\n  function handleDateChange(date) {\n    setValues({\n      ...values,\n      date: date\n    });\n  }\n\n  function handleChange(e) {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setValues({\n      ...values,\n      [e.target.name]: value\n    });\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return { handleChange, handleDateChange, handleBlur, submit, \n    errors, values, isSubmitting };\n}\n","export default function ValidateValues(values) {\n  let errors= {};\n  // Name Errors\n  if(!values.name) {\n    errors.name = 'Nimi on pakollinen';\n  } else if (values.name.length < 3) {\n    errors.name = 'Nimen pituus on vähintään kolme merkkiä';\n  }\n  // Location Errors\n  if(!values.location) {\n    errors.location = 'Sijainti on pakollinen';\n  } else if (values.location.length < 3) {\n    errors.location = 'Sijainnin pituus on vähintään kolme merkkiä';\n  }\n  if(!values.maxRounds) {\n    errors.maxRounds = 'Eräkatto on pakollinen';\n  } else if (values.maxRounds === 0 || values.maxRounds < 0) {\n    errors.maxRounds = 'Eräkaton on oltava enemmän kuin nolla';\n  }\n  if(!values.maxPoints) {\n    errors.maxPoints = 'Pistekatto on pakollinen';\n  } else if (values.maxPoints === 0 || values.maxPoints < 0) {\n    errors.maxPoints = 'Pistekaton on oltava enemmän kuin nolla';\n  }\n  if(!values.timeOuts) {\n    errors.timeOuts = 'Timeout on pakollinen';\n  }\n  return errors;\n}","import React from 'react';\n\nimport Back from \"../../../../static/Back\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport ModifyInfoFormHandler from './ModifyInfoFormHandler';\nimport ModifyInfoValidateValues from './ModifyInfoValidateValues';\n\nexport default function InfoForm({tournament, id, navigate}) {\n  const INITIAL_STATE = {\n    name: tournament.name,\n    location: tournament.location,\n    date: new Date(tournament.date),\n    maxRounds: tournament.defaultMatch.maxRounds,\n    maxPoints: tournament.defaultMatch.maxPoints,\n    timeOuts: tournament.defaultMatch.timeOuts,\n    bestOfMaxRounds: tournament.defaultMatch.bestOfMaxRounds,\n    winByTwo: tournament.defaultMatch.winByTwo\n  }\n  const { \n    handleChange, \n    handleDateChange, \n    handleBlur, \n    submit, \n    errors, \n    values, \n    isSubmitting, \n    dbError\n  } = ModifyInfoFormHandler(INITIAL_STATE, ModifyInfoValidateValues, id, navigate);\n\n  function handleSelect(date) {\n    handleDateChange(date);\n  }\n  const url = `/turnaukset/${tournament.name}/muokkaa/`;\n  return (\n    <div className=\"generic-container\">\n      <div className=\"modify\">\n        <h1>\n          Muokkaa yleisiä tietoja\n        </h1>\n        <form onSubmit={submit}>\n          <label style={{display: 'block'}}>\n            Nimi:\n            <input value={values.name} onChange={handleChange} \n            onBlur={handleBlur} className={errors.name && 'error-input'} \n            type=\"text\" name=\"name\" placeholder={tournament.name}/>\n          </label>\n          {errors.name && <p className=\"error-text\">{errors.name}</p>}\n          <label style={{display: 'block'}}>\n            Sijainti:\n            <input value={values.location} onChange={handleChange} \n            onBlur={handleBlur} className={errors.location && 'error-input'} \n            type=\"text\" name=\"location\" placeholder={tournament.location}/>\n          </label>\n          {errors.location && <p className=\"error-text\">{errors.location}</p>}\n          <label style={{display: 'block'}}>\n            Ajankohta:\n            <DatePicker\n              selected={values.date}\n              onSelect={handleSelect}\n              showTimeSelect\n              dateFormat=\"Pp\"\n            />\n          </label>\n          <label style={{display: 'block'}}>\n            Eräkatto:\n            <input value={values.maxRounds} onChange={handleChange} \n            onBlur={handleBlur} className={errors.maxRounds && 'error-input'} type=\"number\" \n            name=\"maxRounds\"/>\n          </label>\n          {errors.maxRounds && <p className=\"error-text\">{errors.maxRounds}</p>}\n          <label style={{display: 'block'}}>\n            PisteKatto:\n            <input value={values.maxPoints} onChange={handleChange} \n            onBlur={handleBlur} className={errors.maxPoints && 'error-input'} type=\"number\" \n            name=\"maxPoints\"/>\n          </label>\n          {errors.maxPoints && <p className=\"error-text\">{errors.maxPoints}</p>}\n          <label style={{display: 'block'}}>\n            Timeoutit per erä:\n            <input value={values.timeOuts} onChange={handleChange} \n            onBlur={handleBlur} className={errors.timeOuts && 'error-input'} type=\"number\" \n            name=\"timeOuts\"/>\n          </label>\n          {errors.timeOuts && <p className=\"error-text\">{errors.timeOuts}</p>}\n          <label style={{display: 'block'}}>\n            Paras etäkatosta:\n            <input value={values.bestOfMaxRounds} onChange={handleChange} \n            onBlur={handleBlur} className=\"checkbox\" type=\"checkbox\" \n            name=\"bestOfMaxRounds\"/>\n          </label>\n          <label style={{display: 'block'}}>\n            Kahden erolla:\n            <input value={values.winByTwo} onChange={handleChange} \n            onBlur={handleBlur} className=\"checkbox\" type=\"checkbox\" \n            name=\"winByTwo\"/>\n          </label>\n          <button disabled={isSubmitting} type=\"submit\">\n            Tallenna\n          </button>\n          {dbError && <p className=\"error-text\">{dbError }</p>}\n        </form>\n      </div>\n      <Back link={url}/>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport { TournamentContext } from '../../../../utilities/TournamentContext';\nimport NoTournament from '../../../../static/NoTournament';\nimport InfoForm from './InfoForm';\n\nexport default function ModifyInfo(props) {\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n\n  const navigate = () => {\n    props.history.push(`/turnaukset/${tournament.name}/`);\n  }\n  \n  return(\n    <div className=\"generic-container\">\n    {!tournament \n      ? <NoTournament/>\n      : <InfoForm tournament={tournament} id={tournament._id} navigate={navigate}/>\n    }\n    </div>\n  )\n}\n","export default function ValidateValues(values) {\n  let errors= {};\n  // Name Errors\n  if(!values.name) {\n    errors.name = 'Nimi on pakollinen';\n  } else if (values.name.length < 3) {\n    errors.name = 'Nimen pituus on vähintään kolme merkkiä';\n  }\n  return errors;\n}","import { useState, useEffect } from 'react'\n\nimport { addTeam } from '../../../../utilities/FetchClient';\n\nexport default function FormHandler(initialState, validate, id, toggleRefresh) {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        const data = {\n          name: values.name\n        }\n        postTeam(data);\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  });\n  \n  function postTeam(data) {\n    addTeam(data, id, result => {\n      toggleRefresh();\n    });\n  }\n\n  function handleChange(e) {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return { handleChange, handleBlur, submit, errors, values, isSubmitting };\n}\n","import React from 'react';\nimport TeamValidateValues from './TeamValidateValues';\nimport TeamFormHandler from './TeamFormHandler';\n\nexport default function AddTeam({INITIAL_VALUES, _id, toggleRefresh}) {\n  const { \n    handleChange, \n    handleBlur, \n    submit, \n    errors, \n    values, \n    isSubmitting, \n  } = TeamFormHandler(INITIAL_VALUES, TeamValidateValues, _id, toggleRefresh);\n\n  return (\n    <div className=\"m3-container\">\n      <h2>Lisää joukkue:</h2>\n      <form onSubmit={submit}>\n        <label style={{display: 'block'}}>\n          Nimi:\n          <input value={values.name} onChange={handleChange} \n            onBlur={handleBlur} className={errors.name && 'error-input'} \n            type=\"text\" name=\"name\"\n          />\n        </label>\n        {errors.name && <p className=\"error-text\">{errors.name}</p>}\n        <button disabled={isSubmitting} type=\"submit\">\n          Lisää\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { deleteTeam } from '../../../../utilities/FetchClient';\n\nexport default function Team({key1, team, id, toggleRefresh}) {\n  return (\n    <li key={key1}>\n      <h2>{team.name}</h2>\n      <button className=\"delete\" onClick={() => deleteTeam(team.name, id, result => {\n        alert(result.err ? result.err : 'Poisto onnistui');\n        toggleRefresh();\n        })}>\n        <i className=\"fas fa-trash-alt\"></i>\n      </button>\n    </li>\n  );\n}\n","import React, { useContext, Fragment, useState, useEffect } from 'react';\n\nimport { TournamentContext } from '../../../../utilities/TournamentContext';\nimport NoTournament from '../../../../static/NoTournament';\nimport AddTeam from './AddTeam';\nimport Team from './Team';\nimport Back from '../../../../static/Back';\n\nexport default function ModifyTeams(props) {\n  const empty_values = {\n    name: ''\n  }\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament ) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n\n  const navigate = () => {\n    props.history.push(`/turnaukset/${tournament.name}/`);\n  }\n  \n  const toggleRefresh = () => {\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <h1>Muokkaa joukkueita</h1>\n      {!tournament\n      ? <NoTournament />\n      : <Fragment>\n        <div className=\"teams\">\n          {\n            !tournament.teams || tournament.teams.length === 0\n            ? <p>Ei joukkueita vielä!</p>\n            : <ul>\n                {tournament.teams.map(team => <Team team={team} id={tournament._id} \n                toggleRefresh={toggleRefresh} key1={team._id}/>)}\n              </ul>\n          }\n          <AddTeam INITIAL_VALUES={empty_values} _id={tournament._id} \n          toggleRefresh={toggleRefresh} navigate={navigate} />\n        </div>\n        <Back link={`/turnaukset/${tournament.name}/muokkaa/`}/>\n      </Fragment>\n    }\n    </div>\n  );\n}\n","export default function ValidateValues(values) {\n  let errors= {};\n  // Name Errors\n  if(!values.name) {\n    errors.name = 'Nimi on pakollinen';\n  } else if (values.name.length < 3) {\n    errors.name = 'Nimen pituus on vähintään kolme merkkiä';\n  }\n  if(!values.password) {\n    errors.password = 'Salasana on pakollinen';\n  } else if (values.password.length < 3) {\n    errors.password = 'Salasanan pituus on vähintään kolme merkkiä';\n  }\n  return errors;\n}","import { useState, useEffect } from 'react'\n\nimport { addReferee } from '../../../../utilities/FetchClient';\n\nexport default function FormHandler(initialState, validate, _id, toggleRefresh) {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        const data = {\n          referee: {\n            name: values.name, \n            password: values.password\n          }\n        };\n        sendReferee(data);\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  });\n  \n  function sendReferee(referee) {\n    addReferee(referee, _id, result => {\n      alert(result.err ? 'Lisäys epäonnistui' : 'Lisäys onnistui');\n      toggleRefresh();\n    })\n  }\n  function handleChange(e) {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n  return { handleChange, handleBlur, submit, errors, values, isSubmitting };\n}\n","import React from 'react';\nimport RefereeValidateValues from './RefereeValidateValues';\nimport RefereeFormHandler from './RefereeFormHandler';\n\nexport default function AddReferee({INITIAL_VALUES, _id, toggleRefresh}) {\n  const { \n    handleChange, \n    handleBlur, \n    submit, \n    errors, \n    values, \n    isSubmitting, \n  } = RefereeFormHandler(INITIAL_VALUES, RefereeValidateValues, _id, toggleRefresh);\n\n  return (\n    <div className=\"m3-container\">\n      <h2>Lisää tuomari:</h2>\n      <form onSubmit={submit}>\n        <label style={{display: 'block'}}>\n          Nimi:\n          <input value={values.name} onChange={handleChange} \n            onBlur={handleBlur} className={errors.name && 'error-input'} \n            type=\"text\" name=\"name\"\n          />\n        </label>\n        {errors.name && <p className=\"error-text\">{errors.name}</p>}\n        <label style={{display: 'block'}}>\n          Salasana:\n          <input value={values.password} onChange={handleChange} \n            onBlur={handleBlur} className={errors.name && 'error-input'} \n            type=\"text\" name=\"password\"\n          />\n        </label>\n        {errors.password && <p className=\"error-text\">{errors.password}</p>}\n        <button disabled={isSubmitting} type=\"submit\">\n          Tallenna\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { deleteReferee } from '../../../../utilities/FetchClient';\n\nexport default function Referee({referee, id, toggleRefresh}) {\n  return (\n    <div className=\"referee card\">\n      <p>Nimi: {referee.name}</p>\n      <button onClick={() => deleteReferee(referee, id, result => {\n        alert(result.err ? 'Poisto epäonnistui' : 'Poisto onnistui');\n        toggleRefresh();\n      })}>\n        <i className=\"fas fa-trash-alt\"></i>\n      </button>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect, Fragment } from 'react';\n\nimport { TournamentContext } from '../../../../utilities/TournamentContext';\nimport Back from '../../../../static/Back';\nimport NoTournament from '../../../../static/NoTournament';\n\nimport AddReferee from './AddReferee';\nimport Referee from './Referee';\n\nexport default function ModifyReferees(props) {\n  const empty_values = {\n    name: '',\n    password:''\n  }\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament ) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n\n  const navigate = () => {\n    props.history.push(`/turnaukset/${tournament.name}/`);\n  }\n  \n  const toggleRefresh = () => {\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <h1>Muokkaa tuomareita</h1>\n      {!tournament\n      ? <NoTournament />\n      : <Fragment>\n        <div className=\"teams\">\n        {\n          !tournament.referees ||tournament.referees.length === 0\n          ? <p>Ei tuomareita</p>\n          : <ul>\n              {tournament.referees.map((referee, index) => \n                <li key={index}>\n                  <Referee referee={referee} id={tournament._id} toggleRefresh={toggleRefresh}/>\n                </li>\n              )}\n            </ul>\n        }\n          <AddReferee INITIAL_VALUES={empty_values} _id={tournament._id} \n          toggleRefresh={toggleRefresh} navigate={navigate} />\n        </div>\n        <Back link={`/turnaukset/${tournament.name}/muokkaa/`}/>\n      </Fragment>\n    }\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function MatchesTable({id, matches, deleteMatchById, toggleRefresh}) {\n  const compare = (a, b) => {\n    return a.startingTime.localeCompare(b.startingTime);\n  }\n  const sorted = [...matches].sort(compare);\n\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n          <th>\n              Aika\n            </th>\n            <th>\n              Koti\n            </th>\n            <th>\n            </th>\n            <th>\n              Vieras\n            </th>\n            <th>\n              Tulos\n            </th>\n            <th>\n              Kenttä\n            </th>\n            <th>\n              Poista\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sorted.map((match) => {\n            const {homeTeam, visitorTeam, homeRoundsWon, \n              visitorRoundsWon, startingTime, refereeName} = match;\n            return <tr key={match._id}>\n              <td>{startingTime}</td>\n              <td>{homeTeam}</td>\n              <td>-</td>\n              <td>{visitorTeam}</td>\n              <th>{`${homeRoundsWon} - ${visitorRoundsWon}`}</th>\n              <td>{refereeName}</td>\n              <td>\n              <button onClick={() => deleteMatchById(match._id, id, result => {\n                alert(result.err ? 'Poisto epäonnistui' : 'Poisto onnistui');\n                toggleRefresh();\n              })}>\n                <i className=\"fas fa-trash-alt\"></i>\n              </button>\n              </td>\n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","export default function MatchValidateValues(values) {\n  let errors= {};\n  // home Errors\n  if(!values.home) {\n    errors.home = 'Kotijoukkue on pakollinen';\n  }\n  if(!values.visitor) {\n    errors.visitor = 'Vierasjoukkue on pakollinen';\n  }\n  if(!values.refereeName) {\n    errors.refereeName = 'Tuomari on pakollinen';\n  }\n  return errors;\n}","import { useState, useEffect } from 'react'\n\nimport { addMatch } from '../../../../utilities/FetchClient';\n\nexport default function MatchFormHandler(defaultMatch, initialState, \n  validate, _id, toggleRefresh) {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        if(values.home === values.visitor) {\n          alert('Joukkue ei voi pelata itseään vastaan')\n        } else {\n          const data = {\n            match: {\n              homeTeam: values.home, \n              visitorTeam: values.visitor,\n              refereeName: values.refereeName,\n              startingTime: values.startingTime,\n              defaultMatch: defaultMatch\n            }\n          };\n          sendMatch(data);\n          setSubmitting(false);\n        }\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors], defaultMatch, isSubmitting, sendMatch, values);\n  \n  function sendMatch(data) {\n    addMatch(data, _id, result => {\n      alert(result.err ? 'Lisäys epäonnistui' : 'Lisäys onnistui');\n      toggleRefresh();\n    });\n  }\n\n  function handleTimeChange(time) {\n    setValues({\n      ...values,\n      startingTime: time\n    });\n  }\n\n  function handleChange(e) {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n  return { handleChange, handleBlur, handleTimeChange, submit, errors, values, isSubmitting };\n}\n","import React from 'react';\n\nexport default function Select({array, value, onChange, name}) {\n\n  return (\n    <select value={value} onChange={onChange} name={name} >\n      {array.map(element => {\n        return <option value={element.name} key={element._id}>{element.name}</option>\n      })}\n    </select>\n  );\n}\n","import React from 'react';\n\nimport MatchValidateValues from './MatchValidateValues';\nimport MatchFormHandler from './MatchFormHandler';\n\nimport TimePicker from 'react-time-picker';\nimport Select from './Select';\n\nexport default function AddMatch({tournament, navigate, toggleRefresh}) {\n  const INITIAL_VALUES = {\n    home: tournament.teams[0].name,\n    visitor: tournament.teams[0].name,\n    refereeName: tournament.referees[0].name,\n    startingTime: \"10:00\"\n  }\n  const { \n    handleChange, \n    handleBlur, \n    handleTimeChange,\n    submit, \n    errors, \n    values, \n    isSubmitting, \n  } = MatchFormHandler(tournament.defaultMatch, INITIAL_VALUES, MatchValidateValues, \n    tournament._id, toggleRefresh);\n\n  return (\n    <div className=\"m3-container\">\n      <h2>Lisää ottelu:</h2>\n      <form onSubmit={submit} onBlur={handleBlur}>\n        <label style={{display: 'block'}}>\n          Koti:\n          <Select className={errors.home && 'error-input'} array={tournament.teams} \n           value={values.home} onChange={handleChange} name=\"home\" />\n        </label>\n        {errors.home && <p className=\"error-text\">{errors.home}</p>}\n        <label style={{display: 'block'}}>\n          Vieras:\n          <Select className={errors.visitor && 'error-input'} array={tournament.teams} \n           value={values.visitor} onChange={handleChange} name=\"visitor\" />\n        </label>\n        {errors.visitor && <p className=\"error-text\">{errors.visitor}</p>}\n        <label style={{display: 'block'}}>\n          Aika:\n          <TimePicker\n            onChange={handleTimeChange}\n            value={values.startingTime}\n            disableClock={true}\n          />\n        </label>\n        {errors.startingTime && <p className=\"error-text\">{errors.startingTime}</p>}\n        <label style={{display: 'block'}}>\n          Tuomari:\n          <Select className={errors.referee && 'error-input'} array={tournament.referees} \n           value={values.refereeName} onChange={handleChange} name=\"refereeName\" />\n        </label>\n        {errors.refereeName && <p className=\"error-text\">{errors.refereeName}</p>}\n        <button disabled={isSubmitting} type=\"submit\">\n          Tallenna\n        </button>\n      </form>\n    </div>\n  );\n}","import React, {useState, useEffect, useContext, Fragment} from 'react';\n\nimport { TournamentContext } from '../../../../utilities/TournamentContext';\nimport NoTournament from '../../../../static/NoTournament';\nimport Back from '../../../../static/Back';\nimport { deleteMatchById } from '../../../../utilities/FetchClient';\n\nimport MatchesTable from './MatchesTable';\nimport AddMatch from './AddMatch';\n\nexport default function ModifyMatches(props) {\n  const [tournament, setTournament] = useState(null);\n  const context = useContext(TournamentContext);\n  const { getTournamentById } = context;\n\n  useEffect(() => {\n    if(!tournament ) {\n      const tournamentId = sessionStorage.getItem('tournamentId');\n      if(tournamentId) {\n        getTournamentById(tournamentId, (result) => {\n          setTournament(result);\n        })\n      }\n    }\n  });\n\n  const navigate = () => {\n    props.history.push(`/turnaukset/${tournament.name}/`);\n  }\n  \n  const toggleRefresh = () => {\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <h1>Muokkaa otteluita</h1>\n        {\n          !tournament\n            ? <NoTournament/>\n            : <Fragment>\n                {\n                  !tournament.matches || tournament.matches.length === 0 \n                    ? <p>Ei otteluita vielä!</p>\n                    : <MatchesTable matches={tournament.matches} deleteMatchById={deleteMatchById}\n                    toggleRefresh={toggleRefresh} id={tournament._id} />\n                }\n                <div className=\"m3-container\">\n                {\n                  !tournament.teams || tournament.teams.length === 0 \n                    ? <h3>Ottelun lisäämiseen vaaditaan joukkueita, lisää niitä ensin</h3>\n                    : !tournament.referees || tournament.referees.length === 0\n                      ? <h3>Ottelun lisäämiseen vaaditaan vähintään yksi tuomari, lisää se ensin</h3>\n                      : <AddMatch tournament={tournament} toggleRefresh={toggleRefresh} \n                      navigate={navigate}/>\n                }\n                </div>\n                <div className=\"m3-container\">\n                  <Back link={`/turnaukset/${tournament.name}/muokkaa/`}/>\n                </div>\n            </Fragment>\n        }\n    </div>\n  );\n}\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nexport const AuthDataContext = createContext(null);\n\nconst initialAuthData = null;\n\nconst AuthDataProvider = props => {\n  const [authData, setAuthData] = useState(initialAuthData);\n\n  useEffect(() => {\n    const currentAuthData = sessionStorage.getItem('currentAuthData');\n    if (currentAuthData) {\n      setAuthData(currentAuthData);\n    }\n  }, []);\n\n  const onLogout = () => {\n    setAuthData(initialAuthData);\n    sessionStorage.clear();\n  };\n\n  const onLogin = (newAuthData, id) => {\n    setAuthData(newAuthData);\n    sessionStorage.setItem('currentAuthData', newAuthData);\n    sessionStorage.setItem('adminId', id);\n  }\n\n  const authDataValue = {\n    authData,\n    onLogin,\n    onLogout\n  }\n\n  return <AuthDataContext.Provider value={authDataValue} {...props} />;\n};\n\nexport const useAuthDataContext = () => useContext(AuthDataContext);\n\nexport default AuthDataProvider;","import { useState, useEffect } from 'react'\nimport { login } from '../../utilities/FetchClient';\nimport { useAuthDataContext } from '../../utilities/AuthDataProvider';\n\nexport default function FormHandler(initialState, validate, navigate) {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n  const { onLogin } = useAuthDataContext();\n\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        attemptLogin();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [isSubmitting, errors, attemptLogin]);\n\n  function attemptLogin() {\n    const admin = {\n      username: values.username,\n      password: values.password\n    }\n    login(admin, result => {\n      if(result.status === 200) {\n        onLogin(result.data.token, result.data.id);\n        navigate();\n      }\n      else {\n        alert('Väärä käyttäjä tai salasana')\n      }\n    });\n  }\n\n  function handleChange(e) {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return { handleChange, handleBlur, submit, errors, values, isSubmitting };\n}\n","export default function ValidateValues(values) {\n  let errors= {};\n  // Username Errors\n  if(!values.username) {\n    errors.username = 'Käyttäjä on pakollinen';\n  } else if (values.username.length < 4) {\n    errors.username = 'Käyttäjän pituus on oltava vähintään 4 merkkiä';\n  }\n  // Password Errors\n  if(!values.password) {\n    errors.password = 'Salasana on pakollinen';\n  } else if (values.password.length < 6) {\n    errors.password = 'Salasanan pituus on oltava vähintään 6 merkkiä';\n  }\n  return errors;\n}","import React from 'react';\n\nimport FormHandler from './FormHandler';\nimport ValidateValues from './ValidateValues';\n\nconst INITIAL_STATE = {\n  username: '',\n  password: ''\n}\n\nexport default function LoginForm(props) {\n  const navigate = () => {\n    props.history.push('/');\n    window.location.reload();\n  }\n  \n  const {\n    handleChange, handleBlur, submit, errors, values, isSubmitting\n  } = FormHandler(INITIAL_STATE, ValidateValues, navigate);\n  \n  return (\n    <form className='admin-login' onSubmit={submit}>\n      <input\n        name=\"username\"\n        value={values.username}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Käyttäjä'\n      />\n      <p className='errorMsg'>{errors.username}</p>\n      <input \n        name=\"password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Salasana'\n        type=\"password\"\n      />\n      <p className='errorMsg'>{errors.password}</p>\n      <button className=\"submit\" disabled={isSubmitting}>\n        KIRJAUDU\n      </button>\n    </form>\n  );\n}","import { useState, useEffect } from 'react'\nimport { changePassword } from '../../utilities/FetchClient';\n\nexport default function ChangePassFormHandler(initialState, validate, navigate, adminId) {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if(isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if(noErrors) {\n        changePass();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  });\n\n  function changePass() {\n    const data = {\n      password: values.password,\n      newPassword: values.newPassword\n    }\n    changePassword(adminId, data, result => {\n      if(result.status === 200) {\n        alert('Salasana vaihdettu');\n        navigate();\n      }\n      else {\n        alert('Väärä salasana')\n      }\n    });\n  }\n\n  function handleChange(e) {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return { handleChange, handleBlur, submit, errors, values, isSubmitting };\n}\n","export default function ChangePassValidateValues(values) {\n  let errors= {};\n  // Old Password Errors\n  if(!values.password) {\n    errors.password = 'Vanha salasana on pakollinen';\n  } else if (values.password.length < 4) {\n    errors.password = 'Vanhan salasanan pituus on vähintään 6 merkkiä';\n  }\n  // New Password Errors\n  if(!values.newPassword) {\n    errors.newPassword = 'Uusi salasana on pakollinen';\n  } else if (values.newPassword.length < 6) {\n    errors.newPassword = 'Uuden salasanan pituus on vähintään 6 merkkiä';\n  }\n  // New Password Confirm Errors\n  if(!values.newPasswordAgain) {\n    errors.newPasswordAgain = 'Vahvista salasana';\n  } else if (values.newPasswordAgain.length < 6) {\n    errors.newPasswordAgain = 'Salasanan vahvistuksen pituus on vähintään 6 merkkiä';\n  }\n  else if(values.newPassword !== values.newPasswordAgain) {\n    errors.newPasswordAgain = 'Salasanat eivät täsmää'\n  }\n  return errors;\n}","import React from 'react';\n\nimport ChangePassFormHandler from './ChangePassFormHandler';\nimport ChangePassValidateValues from './ChangePassValidateValues';\n\nconst INITIAL_STATE = {\n  password: '',\n  newPassword: '',\n  newPasswordAgain: ''\n}\n\nexport default function ChangePassForm(props) {\n  const navigate = () => {\n    props.history.push('/');\n    window.location.reload();\n  }\n  \n  const adminId = sessionStorage.getItem('adminId');\n  const {\n    handleChange, handleBlur, submit, errors, values, isSubmitting\n  } = ChangePassFormHandler(INITIAL_STATE, ChangePassValidateValues, navigate, adminId);\n  \n  return (\n    <form className='change-pass' onSubmit={submit}>\n      <input\n        name=\"password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Vanha salasana'\n        type=\"password\"\n      />\n      <p className='errorMsg'>{errors.password}</p>\n      <input \n        name=\"newPassword\"\n        value={values.newPassword}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Uusi salasana'\n        type=\"password\"\n      />\n      <p className='errorMsg'>{errors.newPassword}</p>\n      <input \n        name=\"newPasswordAgain\"\n        value={values.newPasswordAgain}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Vahvista uusi salasana'\n        type=\"password\"\n      />\n      <p className='errorMsg'>{errors.newPasswordAgain}</p>\n      <button className=\"submit\" disabled={isSubmitting}>\n        VAIHDA SALASANA\n      </button>\n    </form>\n  );\n}","import React from 'react';\nimport { TournamentContext } from './TournamentContext';\nimport { getTournamentById } from './FetchClient';\nimport  {getTournaments } from './FetchClient';\n\nconst Provider = props => {\n  const setTournamentId = (id) => {\n    sessionStorage.setItem('tournamentId', id);\n  }\n  return (\n    <TournamentContext.Provider\n      value={{\n        setTournamentId: setTournamentId,\n        getTournamentById: getTournamentById,\n        getTournaments: getTournaments\n      }}\n    >\n      {props.children}\n    </TournamentContext.Provider>\n  )\n}\n\nexport default Provider;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./styles/App.css\";\n\nimport Header from \"./components/static/Header\";\nimport Landing from \"./components/body/Landing\";\nimport NoMatch from \"./components/static/NoMatch\";\n\nimport Tournaments from \"./components/body/tournaments/Tournaments\";\nimport Tournament from \"./components/body/tournaments/Tournament\";\nimport AddNew from \"./components/body/tournaments/AddNewForm/AddNew\";\nimport Standings from \"./components/body/tournaments/Standings/Standings\";\nimport MatchSchedule from \"./components/body/tournaments/MatchSchedule/MatchSchedule\";\n\nimport Menu from \"./components/body/tournaments/Modify/Menu\";\nimport ModifyInfo from \"./components/body/tournaments/Modify/Info/ModifyInfo\";\nimport ModifyTeams from \"./components/body/tournaments/Modify/Teams/ModifyTeams\";\nimport ModifyReferees from \"./components/body/tournaments/Modify/Referees/ModifyReferees\";\nimport ModifyMatches from \"./components/body/tournaments/Modify/Matches/ModifyMatches\";\n\nimport Login from \"./components/admin/Login/LoginForm\";\nimport ChangePass from \"./components/admin/ChangePassword/ChangePassForm\";\n\nimport Provider from \"./components/utilities/Provider\";\nimport AuthDataProvider from \"./components/utilities/AuthDataProvider\";\nimport { useAuthDataContext } from \"./components/utilities/AuthDataProvider\";\n\nfunction PrivateRoute({ component, ...options }) {\n  const { authData } = useAuthDataContext();\n  const finalComponent = authData ? component : Login;\n\n  return <Route {...options} component={finalComponent} />;\n}\n\nfunction App() {\n  return (\n    <AuthDataProvider>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div className=\"body-container\">\n            <Provider>\n              <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/koti\" component={Landing} />\n                <Route exact path=\"/turnaukset\" component={Tournaments} />\n                <PrivateRoute\n                  exact\n                  path=\"/turnaukset/uusi\"\n                  component={AddNew}\n                />\n                <Route\n                  exact\n                  path=\"/turnaukset/:name/sarjataulukko\"\n                  component={Standings}\n                />\n                <Route\n                  exact\n                  path=\"/turnaukset/:name/otteluohjelma\"\n                  component={MatchSchedule}\n                />\n                <PrivateRoute\n                  excat\n                  path=\"/turnaukset/:name/muokkaa/yleinen\"\n                  component={ModifyInfo}\n                />\n                <Route exact path=\"/turnaukset/:name\" component={Tournament} />\n                <PrivateRoute\n                  exact\n                  path=\"/turnaukset/:name/muokkaa/joukkueet\"\n                  component={ModifyTeams}\n                />\n                <PrivateRoute\n                  excat\n                  path=\"/turnaukset/:name/muokkaa/tuomarit\"\n                  component={ModifyReferees}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/turnaukset/:name/muokkaa/ottelut\"\n                  component={ModifyMatches}\n                />\n                <PrivateRoute\n                  excat\n                  path=\"/turnaukset/:name/muokkaa\"\n                  component={Menu}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/admin/vaihda-salasana\"\n                  component={ChangePass}\n                />\n                <Route exact path=\"/kirjaudu\" component={Login} />\n                <PrivateRoute component={NoMatch} />\n              </Switch>\n            </Provider>\n          </div>\n        </div>\n      </Router>\n    </AuthDataProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}